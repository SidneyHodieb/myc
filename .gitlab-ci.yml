# This file is a template, and might need editing before it works on your project.
# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: python:3.7

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  MAINTENER: "VERCELOT Alexandre"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - .venv/

before_script:
  - python -V  # Print out python version for debugging
  - python -m venv .venv
  - source .venv/bin/activate
  - pip install -r requirements.txt

stages:
  - build
  - test
  - deploy

build_release_job:
  stage: build
  only:
    - master
  before_script:
    - ''
  image:
    name: alpine/git
    entrypoint: [""]
  script:
    - git config user.email "${GITLAB_USER_EMAIL}"
    - git config user.name "${GITLAB_USER_NAME}"
    - git remote add api-origin https://oauth2:${GITLAB_ACCESS_TOKEN}@gitlab.com/${CI_PROJECT_PATH}
    - git push api-origin HEAD:release

test_flake8:
  stage: test
  only:
  - release
  script:
    - pip install flake8
    - flake8 --exclude .venv --ignore=E501

deploy_release_job:on-schedule:
  stage: deploy
  image: ruby:latest
  only:
    - schedules
  before_script:
    - gem install dpl
  script:
    - echo "Push release to server"
    - dpl --provider=heroku --app=$HEROKU_APP --api-key=$HEROKU_API_KEY

tag_release_job:
  stage: deploy
  only:
    - release
  before_script:
    - ''
  image:
    name: alpine/git
    entrypoint: [""]
  script:
    - git config user.email "${GITLAB_USER_EMAIL}"
    - git config user.name "${GITLAB_USER_NAME}"
    - git remote add api-origin https://oauth2:${GITLAB_ACCESS_TOKEN}@gitlab.com/${CI_PROJECT_PATH}
    - git tag -a "Release-$(date +%Y-%m-%d.%s)" -m "Auto-Release"
    - git push api-origin "Release-$(date +%Y-%m-%d.%s)"

deploy_dev_job:
  stage: deploy
  image: ruby:latest
  only:
    - dev
  before_script:
    - gem install dpl
  script:
    - echo "Push dev env to server"
    - dpl --provider=heroku --app=$HEROKU_APP_DEV --api-key=$HEROKU_API_KEY
